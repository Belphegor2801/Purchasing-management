// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Purchasing_management.Data;

namespace Purchasing_management.Data.Migrations
{
    [DbContext(typeof(PurchasingDBContext))]
    [Migration("20221208035625_create-user-table")]
    partial class createusertable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b1eea43-5597-45a6-bdea-e68c60564247"),
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manager = "Nguyễn Tiến Sơn",
                            Name = "Ban Điều Hành",
                            OrdinalNumber = 1
                        },
                        new
                        {
                            Id = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manager = "Ngô Xuân Hinh",
                            Name = "Ban Đào Tạo",
                            OrdinalNumber = 2
                        },
                        new
                        {
                            Id = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manager = "Lê Tuấn Việt",
                            Name = "Ban Nhân Sự",
                            OrdinalNumber = 3
                        },
                        new
                        {
                            Id = new Guid("8e2f0a16-4c09-44c7-ba56-8dc62dfd792d"),
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manager = "Đỗ Tài Linh",
                            Name = "Ban Truyền Thông",
                            OrdinalNumber = 4
                        },
                        new
                        {
                            Id = new Guid("cab51058-0996-4221-ba63-b841004e89dd"),
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manager = "Hoàng Minh Chí",
                            Name = "Ban Giám Sát",
                            OrdinalNumber = 5
                        });
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegistantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("PurchaseOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b1eea43-5597-45a6-bdea-e68c60564247"),
                            CreateByUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DepartmentId = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            RegistantName = "Lê Tuấn Việt"
                        },
                        new
                        {
                            Id = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            CreateByUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DepartmentId = new Guid("8e2f0a16-4c09-44c7-ba56-8dc62dfd792d"),
                            RegistantName = "Đỗ Tài Linh"
                        },
                        new
                        {
                            Id = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            CreateByUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DepartmentId = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            RegistantName = "Bùi Gia Huy"
                        });
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.Supply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Supplies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b1eea43-5597-45a6-bdea-e68c60564247"),
                            Amount = "3",
                            Name = "Máy tính",
                            OrderId = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            OrdinalNumber = 1
                        },
                        new
                        {
                            Id = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            Amount = "2",
                            Name = "Chậu hoa",
                            OrderId = new Guid("cb554ed6-8fa7-4b8d-8d90-55cc6a3e0074"),
                            OrdinalNumber = 2
                        },
                        new
                        {
                            Id = new Guid("8e2f0a16-4c09-44c7-ba56-8dc62dfd792d"),
                            Amount = "2",
                            Name = "Bàn",
                            OrderId = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            OrdinalNumber = 3
                        },
                        new
                        {
                            Id = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            Amount = "6",
                            Name = "Ghế",
                            OrderId = new Guid("a052a63d-fa53-44d5-a197-83089818a676"),
                            OrdinalNumber = 4
                        },
                        new
                        {
                            Id = new Guid("cab51058-0996-4221-ba63-b841004e89dd"),
                            Amount = "2",
                            Name = "Bàn",
                            OrderId = new Guid("6b1eea43-5597-45a6-bdea-e68c60564247"),
                            OrdinalNumber = 3
                        });
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cab51058-0996-4221-ba63-b841004e89dd"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ddefe6a5-99de-457c-a262-6a78e8015afd",
                            Email = "ngoxuanhinham123@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Password = "Admin#123",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "NXH2801"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Purchasing_management.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Purchasing_management.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Purchasing_management.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Purchasing_management.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.PurchaseOrder", b =>
                {
                    b.HasOne("Purchasing_management.Data.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.Supply", b =>
                {
                    b.HasOne("Purchasing_management.Data.Entity.PurchaseOrder", "PurchaseOrder")
                        .WithMany("SupplyList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Purchasing_management.Data.Entity.PurchaseOrder", b =>
                {
                    b.Navigation("SupplyList");
                });
#pragma warning restore 612, 618
        }
    }
}
